package practice02;

public class BubblesSort {
	public static void main(String[] args) {
		/*
		冒泡排序案例
		下面我们举一个具体的案例来说明冒泡法。我们将五个无须:12,22,32,50,-4
		使用冒泡排序法将其排成一个从小到大的有序数列。

		分析冒泡排序
		数组{12,22,32,50,-4}
		第一轮排序:把目标最大的数放在最后
		第一次比较:{12,72,32,50,-4}
		第二次比较:{12,32,72,50,-4}
		第三次比较:{12,32,50,72,-4}
		第四次比较:{12,32,50,-4,72}

		第二轮排序:把第二大的数放在倒数第二位
		第一次比较:{12,72,32,50,-4}
		第二次比较:{12,32,72,50,-4}
		第三次比较:{12,32,50,72,-4}
		第四次比较:{12,32,50,-4,72}

		第三轮排序:第三轮排序:把第二大的数放在倒数第三位
		第一次比较:{12,72,32,50,-4}
		第二次比较:{12,32,72,50,-4}
		第三次比较:{12,32,50,72,-4}
		第四次比较:{12,32,50,-4,72}

		第四轮排序:第四轮排序:把第二大的数放在倒数第四位
		第一次比较:{12,72,32,50,-4}
		第二次比较:{12,32,72,50,-4}
		第三次比较:{12,32,50,72,-4}
		第四次比较:{12,32,50,-4,72}

		冒泡排序的特点
		1.这一共有五个元素
		2.一共进行了4轮排序，可以看成是外层循环
		3.每一轮排序可以确定一个数的位置，比如第一轮排序确定最大数
		  第二轮排序，确定第二大数的位置，以此类推
		4.当进行比较时，如果前面的数大于后面的数，就交换
		5.每轮比较都在减少

		 */
		int[] arr = {52, 12, 7, 60, 100, 99};
		int temp = 0;
		for (int i = 0; i < arr.length - 1; i++) {//外层循环4次
			for (int f = 0; f < arr.length - 1 - i; f++) {
				//如果前面的数 > 后面的数 ，就进行交换
				if (arr[f] > arr[f + 1]) {
					temp = arr[f];
					arr[f] = arr[f + 1];
					arr[f + 1] = temp;

				}
			}
			System.out.print("第" + (i + 1) + "轮" + " ");
			for (int f = 0; f < arr.length; f++) {
				System.out.print(arr[f] + " ");
			}
		}
	}
}

